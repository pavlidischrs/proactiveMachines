name: "LeNet"
input: "data"
input_shape {
  dim: 1
  dim: 1
  dim: 60
  dim: 60
}


layer {
  name: "loc_conv1"
  type: "Convolution"
  bottom: "data"
  top: "loc_conv1"
  param {
    lr_mult: 1   
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loc_relu1"
  type: "ReLU"
  bottom: "loc_conv1"
  top: "loc_conv1"
}
layer {
  name: "loc_pool1"
  type: "Pooling"
  bottom: "loc_conv1"
  top: "loc_pool1"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "loc_conv2"
  type: "Convolution"
  bottom: "loc_pool1"
  top: "loc_conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loc_relu2"
  type: "ReLU"
  bottom: "loc_conv2"
  top: "loc_conv2"
}
layer {
  name: "loc_pool2"
  type: "Pooling"
  bottom: "loc_conv2"
  top: "loc_pool2"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "loc_ip1"
  type: "InnerProduct"
  bottom: "loc_pool2"
  top: "loc_ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 20
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "loc_relu3"
  type: "ReLU"
  bottom: "loc_ip1"
  top: "loc_ip1"
}
layer {
  name: "loc_ip2"
  type: "InnerProduct"
  bottom: "loc_ip1"
  top: "theta"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "constant"
      value: 0
    }
    bias_filler {
      type: "file"
    }
  }
}
layer{
  name: "st_layer"
  type: "SpatialTransformer" 
  bottom: "data"
  bottom: "theta"
  top: "tra_data"
  #st_param {
  #    to_compute_dU: false
  #}
}








layer {
  name: "conv1"
  type: "Convolution"
  bottom: "tra_data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 9
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    kernel_size: 7
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

